Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
thisguess = guess.value.lower()
if thisguess in tried:
  display(Markdown(('already tried, here is what you tried already:'+textwrap.fill(', '.join(tried)))))
  print_redacted(new_string,count_to_word_dict)
elif thisguess not in word_to_count_dict.keys():
  display(Markdown('Nope'))
  print_redacted(new_string,count_to_word_dict)
  tried.append(thisguess)
else:
  tried.append(thisguess)
  if thisguess in name_list:
    name_list.remove(thisguess)
  if len(name_list)>0:
    count = word_to_count_dict[thisguess]
    count_to_word_dict[count]=count_to_word_dict[count][1:]
    display(Markdown(f"{thisguess} appears {count_the_word_dict[thisguess]} times"))
  else:
    display(Markdown('Hooray! \n'))
    for k,v in count_to_word_dict.items():
      if len(v)>1:
        count_to_word_dict[k]=v[1:]
  print_redacted(new_string,count_to_word_dict)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mOSError[0m                                   Traceback (most recent call last)
Input [0;32mIn [5][0m, in [0;36m<cell line: 2>[0;34m()[0m
[1;32m      2[0m [38;5;28;01mif[39;00m thisguess [38;5;129;01min[39;00m tried:
[1;32m      3[0m   display(Markdown(([38;5;124m'[39m[38;5;124malready tried, here is what you tried already:[39m[38;5;124m'[39m[38;5;241m+[39mtextwrap[38;5;241m.[39mfill([38;5;124m'[39m[38;5;124m, [39m[38;5;124m'[39m[38;5;241m.[39mjoin(tried)))))
[0;32m----> 4[0m   [43mprint_redacted[49m[43m([49m[43mnew_string[49m[43m,[49m[43mcount_to_word_dict[49m[43m)[49m
[1;32m      5[0m [38;5;28;01melif[39;00m thisguess [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m word_to_count_dict[38;5;241m.[39mkeys():
[1;32m      6[0m   display(Markdown([38;5;124m'[39m[38;5;124mNope[39m[38;5;124m'[39m))

Input [0;32mIn [3][0m, in [0;36mprint_redacted[0;34m(new_string, count_to_word_dict)[0m
[1;32m     20[0m     [38;5;28;01melse[39;00m:
[1;32m     21[0m       [38;5;28;01mpass[39;00m
[0;32m---> 22[0m string_to_print [38;5;241m=[39m [43mpypandoc[49m[38;5;241;43m.[39;49m[43mconvert_text[49m[43m([49m[43mstring_to_print[49m[43m,[49m[38;5;124;43m'[39;49m[38;5;124;43mmarkdown_strict[39;49m[38;5;124;43m'[39;49m[43m,[49m[38;5;28;43mformat[39;49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mmediawiki[39;49m[38;5;124;43m'[39;49m[43m,[49m[43mextra_args[49m[38;5;241;43m=[39;49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43m--shift-heading-level-by=1[39;49m[38;5;124;43m"[39;49m[43m,[49m[38;5;124;43m"[39;49m[38;5;124;43m--atx-headers[39;49m[38;5;124;43m"[39;49m[43m][49m[43m)[49m
[1;32m     23[0m string_to_print [38;5;241m=[39m re[38;5;241m.[39msub([38;5;124m'[39m[38;5;124m(?<=[A-z])([39m[38;5;130;01m\n[39;00m[38;5;124m)(?=[A-z])[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124m [39m[38;5;124m'[39m,string_to_print) [38;5;66;03m# remove random extra newlines[39;00m
[1;32m     24[0m string_to_print [38;5;241m=[39m re[38;5;241m.[39msub([38;5;124m'[39m[38;5;124m(#[39m[38;5;124m{[39m[38;5;124m3,5} )(?P<Header>.*)(?=[39m[38;5;130;01m\n[39;00m[38;5;130;01m\n[39;00m[38;5;124m)[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124m**[39m[38;5;124m\[39m[38;5;124mg<Header>** [39m[38;5;124m'[39m,string_to_print) [38;5;66;03m#make all headers just bold[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/pypandoc/__init__.py:90[0m, in [0;36mconvert_text[0;34m(source, to, format, extra_args, encoding, outputfile, filters, verify_format, sandbox, cworkdir)[0m
[1;32m     57[0m [38;5;124;03m"""Converts given `source` from `format` to `to`.[39;00m
[1;32m     58[0m 
[1;32m     59[0m [38;5;124;03m:param str source: Unicode string or bytes (see encoding)[39;00m
[0;32m   (...)[0m
[1;32m     87[0m [38;5;124;03m        path.[39;00m
[1;32m     88[0m [38;5;124;03m"""[39;00m
[1;32m     89[0m source [38;5;241m=[39m _as_unicode(source, encoding)
[0;32m---> 90[0m [38;5;28;01mreturn[39;00m [43m_convert_input[49m[43m([49m[43msource[49m[43m,[49m[43m [49m[38;5;28;43mformat[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mstring[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mto[49m[43m,[49m[43m [49m[43mextra_args[49m[38;5;241;43m=[39;49m[43mextra_args[49m[43m,[49m
[1;32m     91[0m [43m                      [49m[43moutputfile[49m[38;5;241;43m=[39;49m[43moutputfile[49m[43m,[49m[43m [49m[43mfilters[49m[38;5;241;43m=[39;49m[43mfilters[49m[43m,[49m
[1;32m     92[0m [43m                      [49m[43mverify_format[49m[38;5;241;43m=[39;49m[43mverify_format[49m[43m,[49m[43m [49m[43msandbox[49m[38;5;241;43m=[39;49m[43msandbox[49m[43m,[49m
[1;32m     93[0m [43m                      [49m[43mcworkdir[49m[38;5;241;43m=[39;49m[43mcworkdir[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/pypandoc/__init__.py:310[0m, in [0;36m_convert_input[0;34m(source, format, input_type, to, extra_args, outputfile, filters, verify_format, sandbox, cworkdir)[0m
[1;32m    305[0m [38;5;28;01mdef[39;00m [38;5;21m_convert_input[39m(source, [38;5;28mformat[39m, input_type, to, extra_args[38;5;241m=[39m(),
[1;32m    306[0m                    outputfile[38;5;241m=[39m[38;5;28;01mNone[39;00m, filters[38;5;241m=[39m[38;5;28;01mNone[39;00m, verify_format[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[1;32m    307[0m                    sandbox[38;5;241m=[39m[38;5;28;01mTrue[39;00m, cworkdir[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[1;32m    309[0m     _check_log_handler()
[0;32m--> 310[0m     [43m_ensure_pandoc_path[49m[43m([49m[43m)[49m
[1;32m    312[0m     [38;5;28;01mif[39;00m verify_format:
[1;32m    313[0m         [38;5;28mformat[39m, to [38;5;241m=[39m _validate_formats([38;5;28mformat[39m, to, outputfile)

File [0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/pypandoc/__init__.py:728[0m, in [0;36m_ensure_pandoc_path[0;34m()[0m
[1;32m    720[0m logger[38;5;241m.[39minfo(textwrap[38;5;241m.[39mdedent([38;5;124m"""[39m[38;5;130;01m\[39;00m
[1;32m    721[0m [38;5;124m    See http://johnmacfarlane.net/pandoc/installing.html[39m
[1;32m    722[0m [38;5;124m    for installation options[39m
[1;32m    723[0m [38;5;124m[39m[38;5;124m"""[39m))
[1;32m    724[0m logger[38;5;241m.[39minfo(textwrap[38;5;241m.[39mdedent([38;5;124m"""[39m[38;5;130;01m\[39;00m
[1;32m    725[0m [38;5;124m    ---------------------------------------------------------------[39m
[1;32m    726[0m 
[1;32m    727[0m [38;5;124m[39m[38;5;124m"""[39m))
[0;32m--> 728[0m [38;5;28;01mraise[39;00m [38;5;167;01mOSError[39;00m([38;5;124m"[39m[38;5;124mNo pandoc was found: either install pandoc and add it[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m
[1;32m    729[0m               [38;5;124m"[39m[38;5;124mto your PATH or or call pypandoc.download_pandoc(...) or[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m
[1;32m    730[0m               [38;5;124m"[39m[38;5;124minstall pypandoc wheels with included pandoc.[39m[38;5;124m"[39m)

[0;31mOSError[0m: No pandoc was found: either install pandoc and add it
to your PATH or or call pypandoc.download_pandoc(...) or
install pypandoc wheels with included pandoc.
OSError: No pandoc was found: either install pandoc and add it
to your PATH or or call pypandoc.download_pandoc(...) or
install pypandoc wheels with included pandoc.

